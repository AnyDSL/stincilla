fn @iteration_median(body: fn(i32, i32, Acc, Acc) -> ()) = @|out: Img, arr: Img, bh_lower: BoundaryFn, bh_upper: BoundaryFn| {
    let acc   = accelerator(device_id);
    let grid  = (out.width, out.height, 1);
    let block = (128, 1, 1);

    let out_gpu = alloc_img[f32](out, acc.alloc);
    let arr_gpu = alloc_img[f32](arr, acc.alloc);
    copy_img(arr, arr_gpu);

    for benchmark_acc(acc) {
        for work_item in acc.exec(grid, block) {
            let gid_x = work_item.gidx();
            let gid_y = work_item.gidy();
            let arr_acc = get_acc_bh(arr_gpu, set_pixel_fn(arr_gpu), get_pixel_ldg_fn(arr_gpu), (Boundary::Unknown, Boundary::Center), bh_lower, bh_upper);
            let out_acc = get_acc(out_gpu, set_pixel_fn(out_gpu), get_pixel_fn(out_gpu));
            @body(gid_x, gid_y, out_acc, arr_acc);
        }
    }

    copy_img(out_gpu, out);
    release(out_gpu.buf);
    release(arr_gpu.buf);
}
